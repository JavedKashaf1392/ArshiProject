<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd">
		
	<!-- <beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
		 -->
 <!--  <beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
<beans:constructor-arg value= "256" /> 
 </beans:bean> 
 -->
 <!-- <beans:bean id="saltSource" class="org.springframework.security.authentication.dao.ReflectionSaltSource">
</beans:bean>  -->
 
 <beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
 <beans:constructor-arg value = "256" />
 </beans:bean>  
 
 	<!--  <beans:bean id="passwordEncoder" class="com.veggiefridge.online.controller.PwdEncryptAndDecryptWithAES"/> -->
    
<!-- <beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
     <beans:constructor-arg value= "512"/>
</beans:bean>  -->  
          
	    <http auto-config="true">
	    
		<intercept-url pattern="/" access="permitAll" />
		
		<intercept-url pattern="/menu/**" access="permitAll" />
		
		<intercept-url pattern="/kiosk/**" access="hasRole('ROLE_ADMIN')" />
		
		<intercept-url pattern="/product/**" access="hasRole('ROLE_ADMIN')" />
		
	    <intercept-url pattern="/location/**" access="hasRole('ROLE_ADMIN')" />
	
		<intercept-url pattern="/admin" access="hasRole('ROLE_ADMIN')" />
		
		<intercept-url pattern="/customer" access="hasRole('ROLE_ADMIN')" />
		
		<!-- <intercept-url pattern="/user" access="hasAuthority('USER')" /> -->
		<!-- <intercept-url pattern="/kiosk/listKiosk" access="hasAuthority('ADMIN')" 
			/> -->
		
		<intercept-url pattern="/user" access="hasRole('ROLE_USER')" />
		
		<intercept-url pattern="/cart/**" access="hasRole('ROLE_USER')" />
		
		<intercept-url pattern="/order/**" access="hasRole('ROLE_USER')" />
		
	    <intercept-url pattern="/member/**" access="hasRole('ROLE_USER')" />
	    
	    <intercept-url pattern="/wallet/**" access="hasRole('ROLE_USER')" />
	    
	     <intercept-url pattern="/myaccount/**" access="hasRole('ROLE_USER')" />
	    
	    
	   <!--  <intercept-url pattern="/login/**" access="hasRole('ROLE_USER')" /> -->
	    
	      <!-- <intercept-url pattern="/customer/**" access="hasRole('ROLE_USER')" /> -->
		
		<!-- <intercept-url pattern="/product/listProduct" access="hasRole('ADMIN')" 
			/> <intercept-url pattern="/location/listLocation" access="hasRole('ADMIN')" 
			/> -->

		<form-login login-page="/login"
			login-processing-url="/appLogin" username-parameter="email"
			password-parameter="password" always-use-default-target="true"
			default-target-url="/defaultTarget" />
			
		<!-- default-target-url="/defaultTarget" -->
		<access-denied-handler
			error-page="/Access_Denied" />
		<csrf disabled="true" />
	</http>

	<!-- spring authentication configuration via database -->
	    <authentication-manager>
		<authentication-provider>
		
	 <password-encoder ref="passwordEncoder" hash="sha-256" />
	
		<!-- <user-service>
				<user name="admin@gmail.com" password="381b79013d583ecd49ba70bbfa9f0069f79a9d97169b6f8a06d98663a06ca9ff"
					authorities="ROLE_ADMIN" />
				<user name="user@gmail.com" password="381b79013d583ecd49ba70bbfa9f0069f79a9d97169b6f8a06d98663a06ca9ff"
					authorities="ROLE_USER" />
			</user-service> 
			 -->
		 	
		 <jdbc-user-service data-source-ref="dataSource"
		 authorities-by-username-query="select email, role from customer where email = ?" 
		 users-by-username-query="select email,password,'true' as enabled from customer where email = ?" /> 
		</authentication-provider>
	    </authentication-manager>

	<!-- database configuration (database = MySql) -->
	 <beans:bean
	  id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> 
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" /> <beans:property 
		name="url" value="jdbc:mysql://localhost:3306/vfonlinedb" /> <beans:property 
		name="username" value="online" /> <beans:property name="password" value="online123" 
		/> 
	</beans:bean> 
    </beans:beans>

